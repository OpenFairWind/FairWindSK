#!/usr/bin/python3
import json
import os
import re
import sys
import subprocess as sp
from pathlib import Path
import configparser



# Check if this script has been launched as main
if __name__ == '__main__':

    # Create the configuration parser
    config = configparser.ConfigParser()

    # Set the argv[0]
    sys.argv[0] = re.sub(r'(-script\.pyw?|\.exe)?$', '', sys.argv[0])

    # Set the default return value
    rc = 1

    # While the return value is 1
    while rc == 1:

        # Get the ini file path
        iniTextFile = str(Path.home().absolute()) + os.sep + "fairwindsk.ini"

        # Read the ini file
        config.read(iniTextFile)

        # Get the json file
        jsonFile = config.get('General','config')

        # Check if the json file is valid
        if jsonFile is not None and jsonFile != "":

            # Check if the json file is a local file path
            if jsonFile[0] != os.sep:

                # Update the json file path
                jsonFile = str(Path.home().absolute()) + os.sep + jsonFile

            # Opening JSON file
            f = open(jsonFile)

            # returns JSON object as a dictionary
            configData = json.load(f)

            # Checl if main/virtaualKeyboard is in the path
            if "main" in configData and "virtualKeyboard" in configData["main"]:

                # Get the boolean value for the virtual keyboard
                useVirtualKeyboard = bool(configData["main"]["virtualKeyboard"])

                # Check if the virtual keuboard must be set
                if useVirtualKeyboard:

                    # Set the virtual keyboard
                    os.environ["QT_IM_MODULE"] = "qtvirtualkeyboard"

                else:

                    # Clear the virtual keyboard
                    os.environ["QT_IM_MODULE"] = ""


            # Close the file
            f.close()

        # Show the virtual keyboard settings
        print("Virtual Keyboard:", os.environ["QT_IM_MODULE"])

        # Run the process
        child = sp.Popen("FairWindSK", stdout=sp.PIPE, cwd=Path.home())

        # Get the standard output
        streamdata = child.communicate()[0]

        # Retrieve the return code
        rc = child.returncode

        # Print the return code
        print(rc)

        # Exit the script with the return code
        sys.exit(rc)
